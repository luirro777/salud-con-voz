# Generated by Django 5.0.8 on 2024-11-08 20:27

import core.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dolor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salud_gral', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su salud en general?')),
                ('suenio', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo duerme?')),
                ('cuanto_dolor', models.IntegerField(choices=[(1, '1 - Nada de dolor'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Mucho dolor')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cuánto dolor siente su hijo/a?')),
                ('nivel_dolor', models.IntegerField(choices=[(1, '1 - Nada molesto'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy molesto')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo se siente su hijo/a con respecto a el nivel de dolor que siente?')),
                ('nivel_incomodidad', models.IntegerField(choices=[(1, '1 - Nada molesto'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy molesto')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo se siente su hijo/a con respecto a el nivel de incomodidad que siente?')),
                ('como_afecta', models.IntegerField(choices=[(1, '1 - Nada molesto'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy molesto')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo se siente su hijo/a con respecto a la forma en que los dolores le afectan en su vida?')),
                ('impedimentos', models.IntegerField(choices=[(1, '1 - Nada molesto'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy molesto')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo se siente su hijo/a con respecto a la forma en que el dolor le impide ser él/ella mismo/a?')),
                ('no_disfrutar_dia', models.IntegerField(choices=[(1, '1 - Nada molesto'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy molesto')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo se siente su hijo/a con respecto a como el dolor no le permite pasarlo bien todos los días?')),
            ],
            bases=(models.Model, core.models.Calculadora),
        ),
        migrations.CreateModel(
            name='Escuela',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otros_chicos_escuela', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo se lleva con otros chicos en la escuela o colegio?')),
                ('como_lo_integran', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo otros alumnos lo/la integran en la escuela o colegio?')),
                ('profesores', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo se lleva con sus maestros, profesores y/o asistentes?')),
                ('otros_alumnos', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo es aceptado/a por otros alumnos en la escuela o colegio?')),
                ('otros_docentes', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo es aceptado/a por el personal y los docentes de su escuela o colegio?')),
                ('mismo_trato', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a ser tratado/a de la misma manera que los demás en la escuela o colegio?')),
                ('participacion_colegio', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su capacidad para participar en la escuela o colegio?')),
            ],
            bases=(models.Model, core.models.Calculadora),
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apoyo_flia', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a el apoyo que tiene de su familia?')),
                ('viaje_flia', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a salir de viaje con la familia?')),
                ('aceptacion_flia', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo es aceptado/a por su familia?')),
            ],
            bases=(models.Model, core.models.Calculadora),
        ),
        migrations.CreateModel(
            name='Hogar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dormitorio_propio', models.CharField(choices=[('No', 'No'), ('Si', 'Si')], max_length=100, verbose_name='¿El chico o chica cuenta con un dormitorio para el/ella solo/a?')),
                ('autos', models.CharField(choices=[('No', 'No'), ('Si, uno', 'Si, uno'), ('Si, dos o más', 'Si, dos o más')], max_length=100, verbose_name='¿La familia tiene auto o camioneta propios?')),
                ('computadoras', models.CharField(choices=[('Ninguna', 'Ninguna'), ('Una', 'Una'), ('Dos', 'Dos'), ('Tres o más', 'Tres o más')], max_length=100, verbose_name='¿Cuántas computadoras, notebooks o tablets en funcionamiento tiene en total la familia? No incluya videojuegos y teléfonos con acceso a internet.')),
                ('duchas', models.CharField(choices=[('Ninguna', 'Ninguna'), ('Una', 'Una'), ('Dos', 'Dos'), ('Tres o más', 'Tres o más')], max_length=100, verbose_name='¿Cuántos baños con ducha (o bañera) hay en su casa?')),
                ('lavaplatos', models.CharField(choices=[('No', 'No'), ('Si', 'Si')], max_length=100, verbose_name='¿Su familia tiene una máquina lavaplatos en casa?')),
                ('tareas_hogar', models.CharField(choices=[('No', 'No'), ('Si', 'Si'), ('No lo sé', 'No lo sé')], max_length=100, verbose_name='¿Alguna persona que no sea de su familia va a su casa a hacer tareas del hogar? Tareas de servicio doméstico como limpiar, lavar, planchar, etc.')),
                ('vacaciones', models.CharField(choices=[('Ninguna', 'Ninguna'), ('Una', 'Una'), ('Dos', 'Dos'), ('Tres o más', 'Tres o más')], max_length=100, verbose_name='Durante los últimos 12 meses, ¿cuántas veces salió de vacaciones con su familia a algún lugar dónde se quedaron más de un día?')),
                ('nivel_estudio', models.CharField(choices=[('1. No fue a la escuela', '1. No fue a la escuela'), ('2. Primaria incompleta (comenzó, pero no terminó la escuela primaria)', '2. Primaria incompleta (comenzó, pero no terminó la escuela primaria)'), ('3. Primaria completa', '3. Primaria completa'), ('4. Secundaria incompleta (comenzó, pero no terminó la secundaria)', '4. Secundaria incompleta (comenzó, pero no terminó la secundaria)'), ('5. Secundaria completa', '5. Secundaria completa'), ('6. Terciario o universitario incompleto (los comenzó, pero no los terminó)a', '6. Terciario o universitario incompleto (los comenzó, pero no los terminó)a'), ('7. Terciario completa', '7. Terciario completa'), ('8. Universitario de grado completo o posgrado completo', '8. Universitario de grado completo o posgrado completo')], max_length=100, verbose_name='¿Cuál es el nivel máximo de estudios finalizado por la madre del chico o chica?')),
                ('sosten_economico', models.CharField(choices=[('1. La madre del chico o chica', '1. La madre del chico o chica'), ('2. El padre del chico o chica', '2. El padre del chico o chica'), ('3. Un abuelo o abuela del chico o chica', '3. Un abuelo o abuela del chico o chica'), ('4. Otra persona', '4. Otra persona')], max_length=100, verbose_name='¿Quién es el principal sostén económico del hogar donde vive el chico o chica?')),
                ('otros', models.CharField(blank=True, max_length=100, null=True, verbose_name='Si respondió: otra persona, por favor indique ¿Quién?')),
                ('nivel_estudio_2', models.CharField(choices=[('1. No fue a la escuela', '1. No fue a la escuela'), ('2. Primaria incompleta (comenzó, pero no terminó la escuela primaria)', '2. Primaria incompleta (comenzó, pero no terminó la escuela primaria)'), ('3. Primaria completa', '3. Primaria completa'), ('4. Secundaria incompleta (comenzó, pero no terminó la secundaria)', '4. Secundaria incompleta (comenzó, pero no terminó la secundaria)'), ('5. Secundaria completa', '5. Secundaria completa'), ('6. Terciario o universitario incompleto (los comenzó, pero no los terminó)a', '6. Terciario o universitario incompleto (los comenzó, pero no los terminó)a'), ('7. Terciario completa', '7. Terciario completa'), ('8. Universitario de grado completo o posgrado completo', '8. Universitario de grado completo o posgrado completo')], max_length=100, verbose_name='¿Cuál es el máximo nivel de estudios que alcanzó esta persona (principal sostén económico del hogar)?')),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edad', models.IntegerField(verbose_name='Edad: [Del niño/a o adolescente]')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de Nacimiento: [Del niño/a o adolescente]')),
                ('genero', models.CharField(choices=[('femenino', 'Femenino'), ('masculino', 'Masculino'), ('no-binario', 'No binario'), ('otro', 'Otro')], max_length=20, verbose_name='Género')),
                ('genero_otro', models.CharField(blank=True, max_length=20, null=True, verbose_name='¿Cuál?')),
                ('provincia', models.CharField(choices=[('Ciudad Autónoma de Buenos Aires', 'Ciudad Autónoma de Buenos Aires'), ('Buenos Aires', 'Buenos Aires'), ('Catamarca', 'Catamarca'), ('Córdoba', 'Córdoba'), ('Corrientes', 'Corrientes'), ('Entre Ríos', 'Entre Ríos'), ('Jujuy', 'Jujuy'), ('Mendoza', 'Mendoza'), ('La Rioja', 'La Rioja'), ('Salta', 'Salta'), ('San Juan', 'San Juan'), ('San Luis', 'San Luis'), ('Santa Fe', 'Santa Fe'), ('Santiago del Estero', 'Santiago del Estero'), ('Tucumán', 'Tucumán'), ('Chaco', 'Chaco'), ('Chubut', 'Chubut'), ('Formosa', 'Formosa'), ('Misiones', 'Misiones'), ('Neuquén', 'Neuquén'), ('La Pampa', 'La Pampa'), ('Río Negro', 'Río Negro'), ('Santa Cruz', 'Santa Cruz'), ('Tierra del Fuego', 'Tierra del Fuego')], max_length=100, verbose_name='Lugar de residencia: [Provincia]')),
                ('ciudad', models.CharField(max_length=100, verbose_name='Lugar de residencia: [Ciudad]')),
                ('cobertura', models.CharField(choices=[('sistema-publico', 'Utiliza el sistema público exclusivamente.'), ('programa-estatal', 'Programas o planes estatales de salud'), ('pami', 'PAMI'), ('obra-social', 'Obra social (por ejemplo: APROSS, OSECAC, UOM, OSPACA, OSPECOM, UOCRA, UPCN, etc.)'), ('prepaga-obra-social', 'Prepaga a través de obra social (por ejemplo: GEA, MEDIFE, OSDE, SIPSSA, OMINT, SWISS MEDICAL, etc.)'), ('prepaga-voluntaria', 'Prepaga por contratación voluntaria (por ejemplo: GEA, MEDIFE, OSDE, SIPSSA, OMINT, SWISS MEDICAL, etc.)'), ('emergencia-medica', 'Emergencia médica (por ejemplo: URG, EMI, etc.)'), ('nsnr', 'No sé / No respondo.')], max_length=100, verbose_name='¿Qué tipo de cobertura de salud tiene su hijo/a actualmente?')),
                ('cobertura_cual', models.CharField(blank=True, max_length=100, null=True, verbose_name='¿Cuál?')),
                ('certificado_discapacidad', models.CharField(choices=[('no', 'No'), ('si', 'Si'), ('nsnr', 'No sé / No respondo')], max_length=100, verbose_name='¿Su hijo tiene Certificado Único de Discapacidad (CUD)?')),
                ('movimiento', models.IntegerField(choices=[(1, 'Tiene dificultad para mantenerse sentado y para poder controlar la cabeza y el tronco en cualquier posición.'), (2, 'Puede mantenerse sentado con algún soporte en pelvis o en tronco, pero no estar de pie, ni caminar sin gran ayuda.'), (3, 'Es capaz de mantenerse de pie por sí mismo y de caminar, sólo si usa alguna ayuda para la marcha (como un andador, muletas, bastones, etc.)'), (4, 'Puede caminar sin ayudas para la marcha, pero necesita apoyarse en el pasamano para subir y bajar escaleras.'), (5, 'Puede caminar sin ayudas para la marcha y subir y bajar escaleras sin necesidad de apoyarse en el pasamano.')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Por favor, seleccione la opción que mejor describa la capacidad de movimiento del niño/a o adolescente:')),
            ],
        ),
        migrations.CreateModel(
            name='Participacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recreativas', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su capacidad para participar en actividades recreativas y de tiempo libre?')),
                ('deportivas', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su habilidad para participar en actividades deportivas? (Esta pregunta refiere a cómo se siente su hijo/a acerca de su habilidad para hacer deporte, no si puede hacerlo o no)')),
                ('eventos_sociales', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su capacidad para participar en eventos sociales fuera de la escuela o colegio?')),
                ('en_su_comunidad', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su capacidad para participar en su comunidad?')),
            ],
            bases=(models.Model, core.models.Calculadora),
        ),
        migrations.CreateModel(
            name='Relaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('con_gente', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo se lleva con la gente en general?')),
                ('otros_chichos', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo se lleva con otros chicos fuera de la escuela o el colegio (que no son sus amigos de la escuela/colegio)?')),
                ('con_adultos', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo se lleva con los adultos?')),
                ('con_amigos', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a juntarse con amigos/as?')),
                ('aceptacion_otros_chicos', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo es aceptado/a por otros chicos fuera de la escuela o el colegio (que no son sus amigos de la escuela/colegio)?')),
                ('aceptacion_adultos', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo es aceptado/a por los adultos?')),
                ('aceptacion_gente', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a cómo es aceptado por la gente en general?')),
                ('cosas_nuevas', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a la forma en que intenta probar cosas nuevas?')),
                ('comunicacion_conocidos', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a la forma en que se comunica con la gente que conoce bien?')),
                ('comunicacion_extranios', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a la forma en que se comunica con la gente que NO conoce bien?')),
                ('comunicacion_otros_con_el', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a la forma en que otra gente se comunica con su hijo/a?')),
                ('comunicacion_tecnologia', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a la forma en que se comunica con la gente utilizando tecnología? (por ejemplo, mensajes de texto, internet)?')),
            ],
            bases=(models.Model, core.models.Calculadora),
        ),
        migrations.CreateModel(
            name='Salud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hacer_cosas_solo', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a hacer cosas solo/a, sin compañía?')),
                ('movilidad', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su forma de trasladarse de un lado a otro? (es decir, su movilidad)?')),
                ('independencia', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a poder hacer cosas solo/a sin depender de otros?')),
                ('moverse_dentro_barrio', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su capacidad para moverse dentro de su barrio?')),
                ('transporte', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su capacidad para ir de un lugar a otro (ej. transporte)?')),
                ('brazos_y_manos', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su forma de usar sus brazos y sus manos?')),
                ('piernas', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su forma de usar sus piernas?')),
                ('vestirse', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su capacidad para vestirse sólo/a?')),
                ('beber', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su capacidad para beber sin ayuda?')),
                ('ir_al_banio', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su capacidad para ir al baño sin ayuda?')),
            ],
            bases=(models.Model, core.models.Calculadora),
        ),
        migrations.CreateModel(
            name='SaludUltimaSemana',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frustra', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿Su hijo/a se frustra por no poder seguir el ritmo de otros chicos/as?')),
                ('correr', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿A su hijo/a le gustaría poder correr como los demás chicos/as?')),
                ('nadar', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿A su hijo/a le gustaría poder nadar como los demás chicos/as?')),
                ('vestirse', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿A su hijo/a le molesta tardar mucho en vestirse?')),
                ('inteligencia', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿Su hijo/a siente que las personas piensan que es menos inteligente de lo que realmente es?')),
                ('edificios', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿Su hijo/a tiene problemas para entrar y salir de los edificios?')),
                ('piernas', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='Aunque su hijo/a no pueda mover las piernas muy bien ¿puede hacer la mayoría de las cosas?')),
                ('caminar', models.CharField(choices=[('No', 'No'), ('Si', 'Si')], max_length=100, verbose_name='¿Su hijo/a tiene problemas para caminar sin ayuda?')),
                ('caminar_2', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿A su hijo/a le molesta no poder caminar sin ayuda?')),
                ('bañarse', models.CharField(choices=[('No', 'No'), ('Si', 'Si')], max_length=100, verbose_name='¿Su hijo/a tiene problemas para vestirse o bañarse?')),
                ('bañarse_2', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿A su hijo/a le molesta que lo/a tenga que vestir y bañar otra persona?')),
                ('ir_baño', models.CharField(choices=[('No', 'No'), ('Si', 'Si')], max_length=100, verbose_name='¿Su hijo/a tiene problemas para ir al baño solo/a?')),
                ('ir_baño_2', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿A su hijo/a le molesta que lo/a tengan que ayudar para ir al baño?')),
                ('comunicarse', models.CharField(choices=[('No', 'No'), ('Si', 'Si')], max_length=100, verbose_name='¿Su hijo/a tiene problemas para comunicarse?')),
                ('comunicarse_2', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿Su hijo/a se puede comunicar tan bien como quiere?')),
                ('hablar', models.CharField(choices=[('No', 'No'), ('Si', 'Si')], max_length=100, verbose_name='¿Su hijo/a tiene problemas para hablar?')),
                ('hablar_2', models.CharField(choices=[('Nunca', 'Nunca'), ('Casi Nunca', 'Casi Nunca'), ('Algunas Veces', 'Algunas Veces'), ('Casi Siempre', 'Casi Siempre'), ('Siempre', 'Siempre')], max_length=100, verbose_name='¿A su hijo/a le molesta no poder hablar tan bien como los demás chicos/as?')),
            ],
        ),
        migrations.CreateModel(
            name='SaludUltimaSemana2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fisicamente', models.CharField(choices=[('Un poco', 'Un poco'), ('Muchísimo', 'Muchísimo'), ('Moderadamente', 'Moderadamente'), ('Mucho', 'Mucho'), ('Nada', 'Nada')], max_length=100, verbose_name='¿El chico/a se sintió bien y físicamente en forma?')),
                ('energia', models.CharField(choices=[('Un poco', 'Un poco'), ('Muchísimo', 'Muchísimo'), ('Moderadamente', 'Moderadamente'), ('Mucho', 'Mucho'), ('Nada', 'Nada')], max_length=100, verbose_name='¿El chico/a se sintió lleno/a de energía?')),
                ('tristeza', models.CharField(choices=[('Un poco', 'Un poco'), ('Muchísimo', 'Muchísimo'), ('Moderadamente', 'Moderadamente'), ('Mucho', 'Mucho'), ('Nada', 'Nada')], max_length=100, verbose_name='¿El chico/a se sintió triste?')),
                ('soledad', models.CharField(choices=[('Un poco', 'Un poco'), ('Muchísimo', 'Muchísimo'), ('Moderadamente', 'Moderadamente'), ('Mucho', 'Mucho'), ('Nada', 'Nada')], max_length=100, verbose_name='¿El chico/a se sintió solo/a?')),
                ('tiempo_libre', models.CharField(choices=[('Un poco', 'Un poco'), ('Muchísimo', 'Muchísimo'), ('Moderadamente', 'Moderadamente'), ('Mucho', 'Mucho'), ('Nada', 'Nada')], max_length=100, verbose_name='¿El chico/a tuvo suficiente tiempo para él/ella?')),
                ('cosas_queria', models.CharField(choices=[('Un poco', 'Un poco'), ('Muchísimo', 'Muchísimo'), ('Moderadamente', 'Moderadamente'), ('Mucho', 'Mucho'), ('Nada', 'Nada')], max_length=100, verbose_name='¿El chico/a hizo las cosas que quería hacer en su tiempo libre?')),
                ('justicia', models.CharField(choices=[('Un poco', 'Un poco'), ('Muchísimo', 'Muchísimo'), ('Moderadamente', 'Moderadamente'), ('Mucho', 'Mucho'), ('Nada', 'Nada')], max_length=100, verbose_name='¿Los padres del chico/a fueron justos con él/ella?')),
                ('diversion', models.CharField(choices=[('Un poco', 'Un poco'), ('Muchísimo', 'Muchísimo'), ('Moderadamente', 'Moderadamente'), ('Mucho', 'Mucho'), ('Nada', 'Nada')], max_length=100, verbose_name='¿El chico/a se divirtió con sus amigos/as?')),
                ('colegio', models.CharField(choices=[('Un poco', 'Un poco'), ('Muchísimo', 'Muchísimo'), ('Moderadamente', 'Moderadamente'), ('Mucho', 'Mucho'), ('Nada', 'Nada')], max_length=100, verbose_name='¿Al chico/a le fue bien en la escuela o en el colegio?')),
                ('atencion', models.CharField(choices=[('Un poco', 'Un poco'), ('Muchísimo', 'Muchísimo'), ('Moderadamente', 'Moderadamente'), ('Mucho', 'Mucho'), ('Nada', 'Nada')], max_length=100, verbose_name='¿El chico/a pudo prestar atención en clase?')),
            ],
        ),
        migrations.CreateModel(
            name='Sentimientos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hacer_cosas', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su capacidad para hacer las cosas que quiere hacer?')),
                ('uno_mismo', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a él/ella mismo/a?')),
                ('motivacion', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su motivación?')),
                ('oportunidades', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a sus oportunidades en la vida?')),
                ('aspecto_fisico', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo piensa que su hijo/a se siente con respecto a su aspecto físico?')),
            ],
            bases=(models.Model, core.models.Calculadora),
        ),
        migrations.CreateModel(
            name='Servicios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acceso_tratamiento', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo se siente USTED con respecto a el acceso de su hijo/a al tratamiento?')),
                ('acceso_terapia', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo se siente USTED con respecto a el acceso de su hijo/a a terapia (por ejemplo: fisioterapia, fonoaudiología, terapia ocupacional)?')),
                ('acceso_atencion_medica', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo se siente USTED con respecto a el acceso a atención médica o quirúrgica especializada?')),
                ('acceso_pediatria', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo se siente USTED con respecto a el acceso a atención de pediatría o medicina general?')),
                ('acceso_ayuda_aprendizaje', models.IntegerField(choices=[(1, '1 - Muy Desconforme'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9 - Muy Conforme')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9)], verbose_name='¿Cómo se siente USTED con respecto a el acceso a ayuda adicional de aprendizaje dentro de la escuela o colegio?')),
            ],
            bases=(models.Model, core.models.Calculadora),
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edad', models.IntegerField(verbose_name='Edad: [De la persona que responde]')),
                ('relacion', models.CharField(choices=[('madre', 'Madre'), ('padre', 'Padre'), ('tutor', 'Tutor/a legal'), ('pareja-padre-madre', 'Pareja de la madre o el padre'), ('abuelo', 'Abuela/o'), ('hermano', 'Hermana/o'), ('otro-familiar', 'Otro familiar'), ('otro-no-familiar', 'Otra persona, no familiar')], max_length=100, verbose_name='¿Cuál es su relación con el niño/a o adolescente?')),
                ('relacion_otro', models.CharField(blank=True, max_length=100, null=True, verbose_name='¿Cuál?')),
                ('quien_cuida', models.CharField(choices=[('solo', 'Sí, generalmente sola /solo'), ('con-ayuda', 'Sí, con la ayuda de otra/s persona/s'), ('otra-persona', 'No, generalmente otra/s persona/s se ocupan del chico/a'), ('otra-opcion', '¿Otra opción?')], max_length=100, verbose_name='¿Usted es la persona que se ocupa principalmente del cuidado?')),
                ('quien_cuida_otro', models.CharField(blank=True, max_length=100, null=True, verbose_name='¿Quién/es? Por favor, especifique')),
                ('estudios_alcanzados', models.CharField(choices=[('1. No fue a la escuela', '1. No fue a la escuela'), ('2. Primaria incompleta (comenzó, pero no terminó la escuela primaria)', '2. Primaria incompleta (comenzó, pero no terminó la escuela primaria)'), ('3. Primaria completa', '3. Primaria completa'), ('4. Secundaria incompleta (comenzó, pero no terminó la secundaria)', '4. Secundaria incompleta (comenzó, pero no terminó la secundaria)'), ('5. Secundaria completa', '5. Secundaria completa'), ('6. Terciario o universitario incompleto (los comenzó, pero no los terminó)a', '6. Terciario o universitario incompleto (los comenzó, pero no los terminó)a'), ('7. Terciario completa', '7. Terciario completa'), ('8. Universitario de grado completo o posgrado completo', '8. Universitario de grado completo o posgrado completo')], max_length=200, verbose_name='¿Cuál es el nivel máximo de estudios finalizado por la madre del niño/a o adolescente?')),
                ('estado_salud', models.CharField(choices=[('mala', 'Mala'), ('regular', 'Regular'), ('buena', 'Buena'), ('muy-buena', 'Muy buena'), ('excelente', 'Excelente')], max_length=20, verbose_name='Usted diría que SU SALUD es: [De la persona que responde]')),
                ('genero', models.CharField(choices=[('femenino', 'Femenino'), ('masculino', 'Masculino'), ('no-binario', 'No binario'), ('otro', 'Otro')], max_length=20, verbose_name='Género')),
                ('genero_otro', models.CharField(blank=True, max_length=20, null=True, verbose_name='¿Cuál?')),
            ],
        ),
        migrations.CreateModel(
            name='Cpqol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creacion', models.DateTimeField(auto_now_add=True, verbose_name='creacion')),
                ('codigo', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('dolor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.dolor')),
                ('escuela', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.escuela')),
                ('familia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.familia')),
                ('paciente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.paciente')),
                ('participacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.participacion')),
                ('relaciones', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.relaciones')),
                ('salud', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.salud')),
                ('sentimientos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.sentimientos')),
                ('servicios', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.servicios')),
                ('tutor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.tutor')),
            ],
            options={
                'verbose_name_plural': 'Lista De Formularios',
            },
        ),
    ]
